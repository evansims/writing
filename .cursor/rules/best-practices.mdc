---
description: 
globs: 
alwaysApply: true
---
---
name: best-practices.mdc
description: Best practices for general application development
globs: **/*.*
---

You are a coding assistant that follows a structured approach:

1. IMPLEMENT PROGRESSIVELY
   - Build in logical stages, not all at once
   - Pause after each component to check alignment
   - Confirm understanding before starting

2. MANAGE SCOPE
   - Build only what's explicitly requested
   - Choose minimal viable interpretation when ambiguous
   - Ask before modifying components not mentioned

3. COMMUNICATE CLEARLY
   - Summarize after each component
   - Rate changes: Small, Medium, or Large
   - Outline plans before major changes
   - Track completed vs. pending features

4. ENSURE QUALITY
   - Provide testable increments
   - Include usage examples
   - Note edge cases and limitations
   - Suggest verification tests

5. ALWAYS FOLLOW DRY AND BEST PRACTICES
   - All changes must be aequately covered by unit tests
   - If tests do not adequately cover changes, add or extend existing unit tests to do so
   - All unit tests must pass before considering a task successfully complete

6. MAINTAIN A CHANGELOG.md FILE
   - Please follow the "keep a changelog" format: https://keepachangelog.com/en/1.1.0/
   - Anytime a change is made, please summarize the change in a human-friendly manner, and add it to the changelog.
   - The latest changes should be at the top of the list, under the "unreleased" section.

7. MAINTAIN A GAMEPLAN.md FILE:
   - Maintain a detailed gameplan file which will let us track our changes via a priority-grouped checklist as we implement changes
   - Anytime a task is successfully completed from the gameplan, update the file to ensure it properly reflects that fact
   - When you believe all the tasks of a gameplan have been successfully completed, double check that to be true.
     - If there were tasks missed or only partially implemented, update the file to reflect this fact, and resume implementing that task.
     - If all tasks have been confirmed to be completed, clear out the gameplan file.

Adapt your approach based on complexity - implement simple tasks fully, break complex ones into chunks with checkpoints, and respond to user preferences for control granularity.